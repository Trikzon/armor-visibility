plugins {
    id 'java'
    id 'idea'
    id 'maven-publish'
    id 'fabric-loom'
}

base {
    archivesName = "${mod_id}-fabric"
}

repositories {
    maven {
        name = 'TerraformersMC'
        url = 'https://maven.terraformersmc.com/releases'
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.officialMojangMappings()

    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"

    modImplementation "com.diontryban.ash_api:ash_api-fabric:${ash_version}"

    modApi "com.terraformersmc:modmenu:${modmenu_version}"

    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'
    implementation project(":common")
}

loom {
    if (project(":common").file("src/main/resources/${mod_id}.accesswidener").exists()) {
        accessWidenerPath.set(project(":common").file("src/main/resources/${mod_id}.accesswidener"))
    }
    mixin {
        defaultRefmapName.set("${mod_id}.refmap.json")
    }
    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("run")
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    source(project(":common").sourceSets.main.allSource)
}
tasks.withType(Javadoc).configureEach {
    source(project(":common").sourceSets.main.allJava)
}
tasks.named("sourcesJar", Jar) {
    from(project(":common").sourceSets.main.allSource)
}

processResources {
    from project(":common").sourceSets.main.resources
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId base.archivesName.get()
            from components.java
        }
    }
    repositories {
        if (System.getenv("DIONTRYBAN_MAVEN_USER") != null && System.getenv("DIONTRYBAN_MAVEN_TOKEN") != null) {
            maven {
                url = 'https://maven.diontryban.com/releases'
                credentials {
                    username = System.getenv("DIONTRYBAN_MAVEN_USER")
                    password = System.getenv("DIONTRYBAN_MAVEN_TOKEN")
                }
            }
        }
    }
}
